---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: '{{ ansible_operator_meta.name }}-celery-worker'
  namespace: '{{ ansible_operator_meta.namespace }}'
spec: 
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
{% if django_node_selector %}
      nodeSelector:
        {{ django_node_selector | indent(width=8) }}
{% elif node_selector %}
      nodeSelector:
        {{ node_selector | indent(width=8) }}
{% endif %}
      containers:
      - name: celery-worker
        command: ['/bin/bash', '-c']
        args:
        - |
          echo "Wait for required services to start"
          /wait
          echo "Starting celery worker"
          celery -A service_catalog worker -l info
        image: '{{ django_image }}'
        envFrom:
        - configMapRef:
            name: '{{ ansible_operator_meta.name }}-django-cm'
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: '{{ ansible_operator_meta.name }}-celery-beat'
  namespace: '{{ ansible_operator_meta.namespace }}'
spec: 
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
{% if django_node_selector %}
      nodeSelector:
        {{ django_node_selector | indent(width=8) }}
{% elif node_selector %}
      nodeSelector:
        {{ node_selector | indent(width=8) }}
{% endif %}
      containers:
      - name: celery-beat
        resources: {{ django_resource_requirements }}
        command: ['/bin/bash', '-c']
        args:
        - |
          echo "Wait for required services to start"
          /wait
          echo "Starting celery beat"
          celery -A service_catalog beat -l info
        image: '{{ django_image }}'
        envFrom:
        - configMapRef:
            name: '{{ ansible_operator_meta.name }}-django-cm'


